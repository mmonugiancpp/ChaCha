// Generated by CIRCT firtool-1.62.0
module ChaChaEncryption(
  input         clock,
                reset,
  input  [31:0] io_key_0,
                io_key_1,
                io_key_2,
                io_key_3,
                io_key_4,
                io_key_5,
                io_key_6,
                io_key_7,
                io_nonce_0,
                io_nonce_1,
                io_nonce_2,
                io_position,
  input         io_start,
  input  [7:0]  io_plaintext,
  input         io_plain_valid,
  output        io_plain_ready,
  output [7:0]  io_cyphertext,
  output        io_cypher_valid,
  input         io_cypher_ready
);

  wire            pull;
  wire [31:0]     _shiftreg_io_output;
  wire            _shiftreg_io_empty;
  wire [4:0]      _shiftreg_io_count_out;
  wire [31:0]     _engine_io_keystream_0;
  wire [31:0]     _engine_io_keystream_1;
  wire [31:0]     _engine_io_keystream_2;
  wire [31:0]     _engine_io_keystream_3;
  wire [31:0]     _engine_io_keystream_4;
  wire [31:0]     _engine_io_keystream_5;
  wire [31:0]     _engine_io_keystream_6;
  wire [31:0]     _engine_io_keystream_7;
  wire [31:0]     _engine_io_keystream_8;
  wire [31:0]     _engine_io_keystream_9;
  wire [31:0]     _engine_io_keystream_10;
  wire [31:0]     _engine_io_keystream_11;
  wire [31:0]     _engine_io_keystream_12;
  wire [31:0]     _engine_io_keystream_13;
  wire [31:0]     _engine_io_keystream_14;
  wire [31:0]     _engine_io_keystream_15;
  reg             state;
  reg  [4:0]      counter;
  reg  [31:0]     position_reg;
  wire            _shiftreg_io_load_T = _shiftreg_io_empty & pull;
  wire [31:0]     _position_reg_T = position_reg + 32'h1;
  wire            _GEN = io_start | ~state;
  assign pull = state & counter == 5'h14;
  reg  [1:0]      output_index;
  wire            _GEN_0 = ~_shiftreg_io_empty & io_plain_valid;
  wire [31:0]     _CypherMuxIn_T =
    _shiftreg_io_output
    + (_shiftreg_io_count_out == 5'h10
         ? 32'h61707865
         : _shiftreg_io_count_out == 5'hF
             ? 32'h3320646E
             : _shiftreg_io_count_out == 5'hE
                 ? 32'h79622D32
                 : _shiftreg_io_count_out == 5'hD
                     ? 32'h6B206574
                     : _shiftreg_io_count_out == 5'hC
                         ? {io_key_0[7:0],
                            io_key_0[15:8],
                            io_key_0[23:16],
                            io_key_0[31:24]}
                         : _shiftreg_io_count_out == 5'hB
                             ? {io_key_1[7:0],
                                io_key_1[15:8],
                                io_key_1[23:16],
                                io_key_1[31:24]}
                             : _shiftreg_io_count_out == 5'hA
                                 ? {io_key_2[7:0],
                                    io_key_2[15:8],
                                    io_key_2[23:16],
                                    io_key_2[31:24]}
                                 : _shiftreg_io_count_out == 5'h9
                                     ? {io_key_3[7:0],
                                        io_key_3[15:8],
                                        io_key_3[23:16],
                                        io_key_3[31:24]}
                                     : _shiftreg_io_count_out == 5'h8
                                         ? {io_key_4[7:0],
                                            io_key_4[15:8],
                                            io_key_4[23:16],
                                            io_key_4[31:24]}
                                         : _shiftreg_io_count_out == 5'h7
                                             ? {io_key_5[7:0],
                                                io_key_5[15:8],
                                                io_key_5[23:16],
                                                io_key_5[31:24]}
                                             : _shiftreg_io_count_out == 5'h6
                                                 ? {io_key_6[7:0],
                                                    io_key_6[15:8],
                                                    io_key_6[23:16],
                                                    io_key_6[31:24]}
                                                 : _shiftreg_io_count_out == 5'h5
                                                     ? {io_key_7[7:0],
                                                        io_key_7[15:8],
                                                        io_key_7[23:16],
                                                        io_key_7[31:24]}
                                                     : _shiftreg_io_count_out == 5'h4
                                                         ? position_reg - 32'h1
                                                         : _shiftreg_io_count_out == 5'h3
                                                             ? {io_nonce_0[7:0],
                                                                io_nonce_0[15:8],
                                                                io_nonce_0[23:16],
                                                                io_nonce_0[31:24]}
                                                             : _shiftreg_io_count_out == 5'h2
                                                                 ? {io_nonce_1[7:0],
                                                                    io_nonce_1[15:8],
                                                                    io_nonce_1[23:16],
                                                                    io_nonce_1[31:24]}
                                                                 : _shiftreg_io_count_out == 5'h1
                                                                     ? {io_nonce_2[7:0],
                                                                        io_nonce_2[15:8],
                                                                        io_nonce_2[23:16],
                                                                        io_nonce_2[31:24]}
                                                                     : _shiftreg_io_count_out == 5'h0
                                                                         ? 32'h61707865
                                                                         : 32'h0);
  wire [3:0][7:0] _GEN_1 =
    {{_CypherMuxIn_T[7:0]},
     {_CypherMuxIn_T[15:8]},
     {_CypherMuxIn_T[23:16]},
     {_CypherMuxIn_T[31:24]}};
  always @(posedge clock) begin
    if (reset) begin
      state <= 1'h0;
      counter <= 5'h0;
      position_reg <= 32'h0;
      output_index <= 2'h3;
    end
    else begin
      state <= io_start | state;
      if (io_start)
        counter <= 5'h1;
      else if (state) begin
        if (counter == 5'h14)
          counter <= 5'h1;
        else
          counter <= counter + 5'h1;
      end
      else
        counter <= 5'h0;
      if (_GEN)
        position_reg <= io_position;
      else if (state & _shiftreg_io_load_T)
        position_reg <= _position_reg_T;
      if (_GEN_0)
        output_index <= output_index - 2'h1;
    end
  end // always @(posedge)
  ChaCha_Engine engine (
    .clock           (clock),
    .reset           (reset),
    .io_key_0        ({io_key_0[7:0], io_key_0[15:8], io_key_0[23:16], io_key_0[31:24]}),
    .io_key_1        ({io_key_1[7:0], io_key_1[15:8], io_key_1[23:16], io_key_1[31:24]}),
    .io_key_2        ({io_key_2[7:0], io_key_2[15:8], io_key_2[23:16], io_key_2[31:24]}),
    .io_key_3        ({io_key_3[7:0], io_key_3[15:8], io_key_3[23:16], io_key_3[31:24]}),
    .io_key_4        ({io_key_4[7:0], io_key_4[15:8], io_key_4[23:16], io_key_4[31:24]}),
    .io_key_5        ({io_key_5[7:0], io_key_5[15:8], io_key_5[23:16], io_key_5[31:24]}),
    .io_key_6        ({io_key_6[7:0], io_key_6[15:8], io_key_6[23:16], io_key_6[31:24]}),
    .io_key_7        ({io_key_7[7:0], io_key_7[15:8], io_key_7[23:16], io_key_7[31:24]}),
    .io_nonce_0
      ({io_nonce_0[7:0], io_nonce_0[15:8], io_nonce_0[23:16], io_nonce_0[31:24]}),
    .io_nonce_1
      ({io_nonce_1[7:0], io_nonce_1[15:8], io_nonce_1[23:16], io_nonce_1[31:24]}),
    .io_nonce_2
      ({io_nonce_2[7:0], io_nonce_2[15:8], io_nonce_2[23:16], io_nonce_2[31:24]}),
    .io_position     (_GEN ? io_position : state ? _position_reg_T : position_reg),
    .io_keystream_0  (_engine_io_keystream_0),
    .io_keystream_1  (_engine_io_keystream_1),
    .io_keystream_2  (_engine_io_keystream_2),
    .io_keystream_3  (_engine_io_keystream_3),
    .io_keystream_4  (_engine_io_keystream_4),
    .io_keystream_5  (_engine_io_keystream_5),
    .io_keystream_6  (_engine_io_keystream_6),
    .io_keystream_7  (_engine_io_keystream_7),
    .io_keystream_8  (_engine_io_keystream_8),
    .io_keystream_9  (_engine_io_keystream_9),
    .io_keystream_10 (_engine_io_keystream_10),
    .io_keystream_11 (_engine_io_keystream_11),
    .io_keystream_12 (_engine_io_keystream_12),
    .io_keystream_13 (_engine_io_keystream_13),
    .io_keystream_14 (_engine_io_keystream_14),
    .io_keystream_15 (_engine_io_keystream_15),
    .io_push         (io_start | state & _shiftreg_io_load_T),
    .io_run          (_shiftreg_io_empty | ~pull)
  );
  ChaChaShiftRegister shiftreg (
    .clock          (clock),
    .reset          (reset),
    .io_inputs_0    (_engine_io_keystream_0),
    .io_inputs_1    (_engine_io_keystream_1),
    .io_inputs_2    (_engine_io_keystream_2),
    .io_inputs_3    (_engine_io_keystream_3),
    .io_inputs_4    (_engine_io_keystream_4),
    .io_inputs_5    (_engine_io_keystream_5),
    .io_inputs_6    (_engine_io_keystream_6),
    .io_inputs_7    (_engine_io_keystream_7),
    .io_inputs_8    (_engine_io_keystream_8),
    .io_inputs_9    (_engine_io_keystream_9),
    .io_inputs_10   (_engine_io_keystream_10),
    .io_inputs_11   (_engine_io_keystream_11),
    .io_inputs_12   (_engine_io_keystream_12),
    .io_inputs_13   (_engine_io_keystream_13),
    .io_inputs_14   (_engine_io_keystream_14),
    .io_inputs_15   (_engine_io_keystream_15),
    .io_load        (_shiftreg_io_load_T),
    .io_shift_right (_GEN_0 & output_index == 2'h0),
    .io_output      (_shiftreg_io_output),
    .io_empty       (_shiftreg_io_empty),
    .io_count_out   (_shiftreg_io_count_out)
  );
  assign io_plain_ready = ~_shiftreg_io_empty;
  assign io_cyphertext = _GEN_1[output_index] ^ io_plaintext;
  assign io_cypher_valid = ~_shiftreg_io_empty;
endmodule

